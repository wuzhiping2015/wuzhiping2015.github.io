<!DOCTYPE html>
<html>

	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>Deviceinfo</title>
		<link rel="stylesheet" href="assets/css/bootstrap.min.css?2019827" />
		<link rel="stylesheet" href="assets/css/global.css?2019827" />
		<!-- Font Awesome -->
		<link rel="stylesheet" href="assets/css/font-awesome.min.css?2019827" />
		<!-- Theme style -->
		<link rel="stylesheet" href="assets/css/AdminLTE.min.css?2019827" />
		<link rel="stylesheet" href="assets/css/skins/skin-black.min.css?2019827" />
		<link rel="stylesheet" href="assets/css/index.css?2019827">
	</head>
	<style>
		.viswCard span {
	color: #fff;
	margin-right: 0px;
	}
	.box-header .el-button--mini, .el-button--mini.is-round {
		padding: 1px 3px;
		color: #fff;
	   vertical-align: middle;
	}
	.el-input{
		vertical-align: middle;
	}
	.label-text-vm {
	    text-align: left;
	}
	.col-sm-4 {
	    margin: 10px 0;
	}
	
	.row .label {
	    display: inline-block;
	    width: 18px;
	    height: 18px;
	    margin-top: 5px;
	}
	.description-block{
		margin: 10px 0px;
	}
	.list-group{
		margin-bottom: 0px;
	}
	.box-header.with-border {
	    padding-bottom: 14px;
	}
	.clear{
		 overflow: auto;
		  zoom: 1;
		  background: #fff;
	}
	.el-form-item{
		margin-bottom: 6px !important;
	}
	.height{
		height: 220px;
	}
</style>
	<body>
		<!-- hold-transition skin-blue-light sidebar-mini sidebar-collapse -->
		<div class="wrapper" id="content" style="background:#f1f4f6; margin-top: 10px;">

			<div class="col-md-12" style="padding-left: 0px;">
				<div class="row">
					<!--  DL I/P  start-->
					<div class="col-md-12">

						<div class="box">
							<div class="box-header with-border">
								<h3 class="box-title">DeviceInfo</h3>
								<div class="box-tools pull-right" style="top: 9px;">
									<el-button type="primary" @click="onSubmit" size="small">Read</el-button>
								</div>
							</div>

							<div class="clear" style="padding-top:10px;">
								<el-form ref="DEVICE" label-width="220px" size="medium">
									<div style="width: 600px;">
										<!-- <el-form-item label="设备厂商代码">
											{{form["45"]}}
										</el-form-item> -->
										<el-form-item v-for="(v,i) in DEVICE" :label="v.name">
											{{v.value | valnull}}
										</el-form-item>

									</div>
								</el-form>
							</div>
						</div>
					</div>
					<!--  DL I/P  end-->
				</div>

				<!-- /.nav-tabs-custom -->
			</div>

		</div>
		<script type="text/javascript" src="assets/js/jquery.js"></script>
		<script type="text/javascript" src="assets/js/vue.js"></script>
		<script type="text/javascript" src="assets/js/index.js"></script>
		<script type="text/javascript" src="assets/js/comment.js"></script>

		<style scoped>

		</style>
		<script type="text/javascript">
			var helios;
			let data = {
				DEVICE: [],
				equipment: sessionStorage.getItem("equipment"),
			};

			let getajax = {

			}

			helios = new Vue({
				el: "#content",
				data: data,
				mounted() {
					$("body").resize();
					this.onSubmit();
				},
				methods: {
					onSubmit(c) {
						if ("ru" == this.equipment) {
							var obj1 = [208,209,210,211,212,213, 82, 83
							];
							var obj = {
								"data": obj1.join(),
								"action": "READ",
							}
							util.getattrajax(obj, function(data) {
								var data = (data.data);
								var data1 = [];
								var getdata = new Object;
								if (data.length > 0) {
									if (c) {
										toast.$message({
											message: 'success',
											type: 'success',
											offset: 90,
											showClose: true,
										});
									}
								}
								for (var i = 0; i < data.length; i++) {
									if (208 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "Category",
											value: data[i].value
										}
										data1.push(obj);
									}
									if (209 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "Model No",
											value: data[i].value
										}
										data1.push(obj);
									}
									if (210 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "Serial No",
											value: data[i].value
										}
										data1.push(obj);
									}
									if (211 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "Software Version",
											value: data[i].value
										}
										data1.push(obj);
									}
									if (212 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "FPGA Version",
											value: data[i].value
										}
										data1.push(obj);
									}
									if (213 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "Temp",
											value: data[i].value + " °C"
										}
										data1.push(obj);
									}
									if (82 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "Site No",
											value: data[i].value
										}
										data1.push(obj);
									}
									if (83 == data[i].adr) {

										let obj = {
											adr: data[i].adr,
											name: "Equipment ID",
											value: (data[i].value)
										}
										data1.push(obj);
									}
									helios.DEVICE = data1;
								}

							});

						} else {
							var obj1 = [46, 47, 48, 49, 50, 51, 82, 83];
							var obj = {
								"data": obj1.join(),
								"action": "READ",
							}
							util.getattrajax(obj, function(data) {
								var data = (data.data);
								var data1 = [];
								var getdata = new Object;
								if (data.length > 0) {
									if (c) {
										toast.$message({
											message: 'success',
											type: 'success',
											offset: 90,
											showClose: true,
										});
									}
								}
								for (var i = 0; i < data.length; i++) {

									if (46 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "Category",
											value: data[i].value
										}
										data1.push(obj);
									}
									if (47 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "Model No",
											value: data[i].value
										}
										data1.push(obj);
									}
									if (48 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "Serial No",
											value: data[i].value
										}
										data1.push(obj);
									}
									if (49 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "Software Version",
											value: data[i].value
										}
										data1.push(obj);
									}
									if (50 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "FPGA Version",
											value: data[i].value
										}
										data1.push(obj);
									}
									if (51 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "Temp",
											value: data[i].value + " °C"
										}
										data1.push(obj);
									}
									if (82 == data[i].adr) {
										let obj = {
											adr: data[i].adr,
											name: "Site No",
											value: data[i].value
										}
										data1.push(obj);
									}
									if (83 == data[i].adr) {

										let obj = {
											adr: data[i].adr,
											name: "Equipment ID",
											value: (data[i].value)
										}
										data1.push(obj);
									}
									helios.DEVICE = data1;
								}

							});

						}
					}
				},
				filters: {
					valnull(Element) {
						if (Element == "") {
							return "Empty...";
						} else {
							return Element;
						}
					}
				}
			})
		</script>
	</body>
</html>
