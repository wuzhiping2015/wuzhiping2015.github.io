beforeMount() {
		this.MDOTStype();
		let tempMenu = []; //主菜单
		var param = [];
		var sitelist;
		var currentStation = 0;
		var currentPort = 0;
		var stationlist = [];
		var vue = this;
		let tempMenu1 = [];
		var obj = {};
		var portlist = new Array(8);
		portlist.fill(0);
		$.ajax({
			type: "GET",
			url: 'http://192.168.93.245:80/topology.json?verisn=' + Math.ceil(Math.random() * 1010),
			dataType: "json",
			success: function(data1) {
				/* localStorage.setItem("HeliosDev", (data1));
				sessionStorage.setItem("HeliosDev1",(data1)); */
				localStorage.setItem("HeliosDev", JSON.stringify(data1));
				//设置第一条AU
				data1.sites[0].device.splice(0, 0, {
					"device_id": "0",
					"route": 0,
					"type": "au",
					"site_no": data1.sites[0].site_no
				});

				let j = 0;
				let setNodata = data1.sites[0].device;
				let data = [];


				//沿用旧项目处理方式
				while (j < setNodata.length) {
					let obj2 = {
						equipid: setNodata[j].device_id,
						offline: 0,
						route: setNodata[j].route,
						station: "0",
						status: 0,
						type: 0,
						site_no: data1.sites[0].site_no
					}
					data.push(obj2);
					j++;
				}
				currentStation = data[0].station;
				var offset = 0;
				obj = {};
				obj.label = currentStation;
				obj.children = [];

				obj.offline = 0;
				obj.station = 0;
				obj.equipid = 0;
				obj.type = 0;
				obj.DEVtype = "au";
				obj.site_no = data1.sites[0].site_no;
				tempMenu1.push(obj);

				$.each(data, function(idx, item) {
					if (currentStation == item.station) {

					} else {

						obj = {};
						obj.label = item.station;
						obj.offline = 0;
						obj.station = 0;
						obj.equipid = 0;
						obj.children = [];
						obj.type = 1;
						obj.site_no = data1.sites[0].site_no;
						tempMenu1.push(obj);
						currentStation = item.station;
					}
					if (item.route == "0") {
						obj = {};
						obj.offline = item.offline;
						obj.route = item.route;
						obj.equipid = item.equipid;
						obj.type = item.type;
						obj.station = item.station;
						obj.site_no = data1.sites[0].site_no;
						obj.stationlist = [];
						tempMenu.push(obj);
						stationlist.push(currentStation);
						tempMenu1[tempMenu1.length - 1].equipid = item.equipid;
						tempMenu1[tempMenu1.length - 1].station = item.station;
						tempMenu1[tempMenu1.length - 1].offline = item.offline;
					}
				});

				currentStation = stationlist[1];
				currentpoint = 0;
				$.each(data, function(idx, item) {

					if (item.route != "0") {
						if (currentStation == item.station) {
							obj1 = {};
							obj1.offline = item.offline;
							obj1.station = item.station;
							obj1.route = item.route;
							obj1.equipid = item.equipid;
							obj.site_no = data1.sites[0].site_no;
							obj1.type = item.type;
							tempMenu[currentpoint].stationlist.push(obj1);

						} else {
							currentpoint = stationlist.findIndex(function(value) {
								return value == item.station
							});
							currentStation = item.station;
							obj1 = {};
							obj1.offline = item.offline;
							obj1.station = item.station;
							obj1.route = item.route;
							obj1.equipid = item.equipid;
							obj.site_no = data1.sites[0].site_no;
							obj1.type = item.type;
							tempMenu[currentpoint].stationlist.push(obj1);
						}
					} else {
						//console.log(item);
					}

				});

				for (var i = 0; i < tempMenu.length; i++) {
					portlist.fill(0);
					currentPort = 0;
					$.each(tempMenu[currentpoint].stationlist, function(idx, item) {

						//赋值
						var str = item.route.toString();
						str = str.substr(0, 1);
						//console.log(parseInt(str) + "-" + portlist[parseInt(str)]);

						if (portlist[parseInt(str)] == 0) {
							obj = {};
							//obj.label = str;
							obj.label = item.route;
							obj.type = 1;
							obj.offline = 0;
							obj.station = 0;
							obj.equipid = item.equipid;
							obj.site_no = data1.sites[0].site_no;
							obj.children = [];
							obj.DEVtype = "eu";

							tempMenu1[currentpoint].children.push(obj);

							//站点赋值进去
							currentPort = tempMenu1[currentpoint].children.length;
							portlist[parseInt(str)] = currentPort;
							obj = {};
							obj.label = item.route;

							if (item.offline == 1) {
								obj.type = 2;
							} else {
								obj.type = 3;
								obj.offline = 1;
								obj.station = item.station;
								obj.equipid = item.equipid;
								obj.site_no = data1.sites[0].site_no;
								obj.children = [];
							}
							//tempMenu1[currentpoint].children[currentPort - 1].children.push(obj);
						} else {
							currentPort = portlist[parseInt(str)];
							obj = {};
							obj.label = item.route;
							if (item.offline == 1) {
								obj.type = 2;
							} else {
								obj.DEVtype = "ru";
								obj.type = 3;
								obj.offline = item.offline;
								obj.station = item.station;
								obj.equipid = item.equipid;
								obj.site_no = data1.sites[0].site_no;
								obj.children = [];
								tempMenu1[currentpoint].children[currentPort - 1].children.push(obj);
							}
						}
					});
				}

				vue.menu = tempMenu1;
				//vue.menuList1 = tempMenu;
			},
		});
	},

	methods: {
		handleNodeClick(data) {
			var tagurl = (data.DEVtype).toLowerCase();
			sessionStorage.setItem("url", "Status");
			sessionStorage.setItem("equipment", tagurl);
			let obj = [{
					adr: 82,
					value: util.hex2int(data.site_no)
				},
				{
					adr: 83,
					value: util.hex2int(data.equipid)
				},
			];
			var MDOTS = {
				"data": JSON.stringify(obj),
				"action": "SET"
			}
			localStorage.setItem("MDOTS", JSON.stringify(obj));
			util.postattrajax(MDOTS, function(data1) {
				if (1 != data1) {
					toast.$message({
						message: ' Error:' + data1.message,
						type: 'error',
						showClose: true,
						offset: 80
					});
					return false;
				} else {
					setTimeout(function() {
						window.location.href = "Status.html";
					}, 100);
					/* toast.$message({
						message: "success",
						type: 'success',
						showClose: true,
						offset: 80
					}); */
				}
			});
			//	util.EquipmentID();
			//window.location.reload();
		},
