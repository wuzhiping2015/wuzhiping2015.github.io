<!DOCTYPE html>
<html>

	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>Helios </title>
		<link rel="stylesheet" href="assets/css/bootstrap.min.css?2019827" />
		<link rel="stylesheet" href="assets/css/global.css?2019827" />
		<!-- Font Awesome -->
		<link rel="stylesheet" href="assets/css/font-awesome.min.css?2019827" />
		<!-- Theme style -->
		<link rel="stylesheet" href="assets/css/AdminLTE.min.css?2019827" />
		<link rel="stylesheet" href="assets/css/skins/skin-black.min.css?2019827" />
		<link rel="stylesheet" href="assets/css/index.css?2019827">
	</head>
	<style>
		[class*="col-grid-s"]>li {
			width: 410px;
		}
			
		.nav-tabs-custom li {
			width: 120%;
		}
			
		.box .box-footer {
			border-top: 0px;
		}
			
		.label {
			font-size: 120%;
		}
			
		.el-dialog {
			width: 30%;
		}
			
		td span small {
			cursor: pointer;
		}
			
		.el-button--mini,
		.el-button--mini.is-round {
			padding: 1px 3px;
			color: #fff
		}
			
		.viswCard span {
			color: #fff;
			margin-right: 0px;
		}
			
		.table-hover td {
			text-indent: 6px;
		}
			
		.table>tbody>tr.add>td,
		.table>tbody>tr>td.res {
			font-weight: bold;
			color: #333;
		}
			
		.viswCard {
			position: inherit;
			top: 4px;
			width: 122px;
		}
			
		.table.res td .label {
			margin-left: 5px;
			float: right;
		}
			
		
			
		tr td:nth-child(4),
		tr.res td:nth-child(5) {
			background-color: rgb(218, 219, 219);
		}
			
		tr.res td:nth-child(4) {
			background-color: #fff;
		}
			
		div.col-xs-2 {
			padding: 0px !important;
			width:18% !important;
		}
		div.col-xs-2.hover{
			width:13.5% !important;
		}
		.dataTable td{
			height: 45px;
		}
		.el-checkbox-group{
			margin-right: 0px;
			margin-left: 13px;
			float: left;
		}
		.el-checkbox__label{
			padding-left: 2px !important;
		}
		.el-checkbox__inner{
			vertical-align: 1px;
		}
		.col-xs-2.hover:hover{
			background: #f6fbfd;
		}
</style>
	<body>
		<!-- hold-transition skin-blue-light sidebar-mini sidebar-collapse -->
		<div class="wrapper" id="content" style="background:#f1f4f6; margin-top: 2px;">
			<div class="box">

				<div class="box-body" style="text-align: center; height: 95vh;" v-show="dataimg">
					<img src="assets/images/wifi.gif" style="margin-top: 10%;">
				</div>

				<div class="box-body table-responsive no-padding" v-show="databox">
					<div class="col-xs-2 " style=" float:left">
						<table class="table res table-bordered  dataTable first">
							<tbody>
								<tr>
									<td colspan="2" style="height:45px"> </td>
								</tr>
								<tr>
									<td colspan="2"> <span class="icon iconfont icon-kongzhitai"></span> <b>
											<Type>Band</Type>
										</b></td>
								</tr>
								<tr>
									<td colspan="2"><strong>UL I/P (DSP)</strong></td>
								<tr>
								<tr>
									<td colspan="2"><strong>DL O/P (DSP)</strong></td>
								</tr>

								<tr>
									<td colspan="2"><b>DL PA O/P</b></td>
								</tr>
								<tr>
									<td colspan="2"> <b>DL PA Temp</b></td>
								</tr>

								<tr>
									<td colspan="2"><strong>Digital Board Feedback Power</strong></td>

								<tr>
									<td colspan="2"><b>DL PA Status</b></td>
								</tr>


								<tr>
									<td rowspan="5"><b>RF</b></td>
									<td>UL Freq</td>
								</tr>
								<tr>
									<td>DL Freq</td>
								</tr>
								<tr>
									<td>Bandwidth</td>
								</tr>
								<tr>
									<td>UL ATT</td>
								</tr>
								<tr>
									<td>DL ATT</td>
								</tr>



								<tr v-if="heliosUser">
									<td rowspan="4"><b>DL</b></td>
									<td>DL O/P Underpower Threshold </td>
								</tr>
								<tr v-if="heliosUser">
									<td>DL O/P Overpower Threshold</td>
								</tr>
								<tr v-if="heliosUser">
									<td>DL O/P Underpower Alarm</td>
								</tr>
								<tr v-if="heliosUser">
									<td>DL O/P Overpower Alarm</td>
								</tr>

								<tr>
									<td rowspan="6"><b>PA</b></td>
									<td>DL PA ATT </td>
								</tr>
								<tr>
									<td>DL PA Enable</td>
								</tr>

								<tr v-if="heliosUser">
									<td>PA Failure Alarm</td>
								</tr>

								<tr v-if="heliosUser">
									<td>PA VSWR Alarm</td>
								</tr>
								<tr v-if="heliosUser">
									<td>PA Over Temp Alarm</td>
								</tr>
							<tbody>
						</table>
					</div>

					<!-- 数据循环 -->
					<div class="col-xs-2 hover" v-for="(v,i) in Roclength">
						<table class="table res table-bordered  dataTable">
							<tbody>
								<tr>
									<td style="height:45px" align="center">
										<div class="viswCard">
											<el-button type="success" :disabled="!canSave" size="mini" @click="Setroc_Data(i)">Set
											</el-button> &nbsp;&nbsp;
											<el-button type="primary" :disabled="!Read" size="mini" @click="Getroc_Data(i)">Read
											</el-button>
										</div>
									</td>
								</tr>
								<tr>
									<td>{{i | bandname}}</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==183">
									<td>
										{{vv.value[i]}}
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==184">
									<td>
										{{vv.value[i]}}
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==185">
									<td>
										{{vv.value[i]}}
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==186">
									<td>
										{{vv.value[i]}}
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==8">
									<td>
										{{vv.value[i]}}
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==189">
									<td>
										{{vv.value[i]}}
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==1">
									<td>
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==2">
									<td>
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==3">
									<td>
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==4">
									<td>
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==5">
									<td>
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==202">
									<td>
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==203">
									<td>
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==198">
									<td style=" padding: 0px;">
										<el-checkbox-group v-model="vv.agent[i]" size="small">
											<el-checkbox label="Agent" border></el-checkbox>
										</el-checkbox-group>

										<el-checkbox-group v-model="vv.enbale[i]" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==199">
									<td style=" padding: 0px;">
										<el-checkbox-group v-model="vv.agent[i]" size="small">
											<el-checkbox label="Agent" border></el-checkbox>
										</el-checkbox-group>

										<el-checkbox-group v-model="vv.enbale[i]" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==187">
									<td>
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==188">
									<td>
										<el-switch v-model="vv.value[i]"></el-switch>
									</td>
								</tr>

								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==191">
									<td style=" padding: 0px;">
										<el-checkbox-group v-model="vv.agent[i]" size="small">
											<el-checkbox label="Agent" border></el-checkbox>
										</el-checkbox-group>

										<el-checkbox-group v-model="vv.enbale[i]" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==193">
									<td style=" padding: 0px;">
										<el-checkbox-group v-model="vv.agent[i]" size="small">
											<el-checkbox label="Agent" border></el-checkbox>
										</el-checkbox-group>

										<el-checkbox-group v-model="vv.enbale[i]" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
								</tr>

								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==195">
									<td style=" padding: 0px;">
										<el-checkbox-group v-model="vv.agent[i]" size="small">
											<el-checkbox label="Agent" border></el-checkbox>
										</el-checkbox-group>

										<el-checkbox-group v-model="vv.enbale[i]" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
								</tr>

							</tbody>
						</table>
					</div>
					<!-- 数据循环 -->

				</div>
			</div>

		</div>
		</div>
		</div>
		<script type="text/javascript" src="assets/js/jquery.js"></script>
		<script type="text/javascript" src="assets/js/vue.js"></script>
		<script type="text/javascript" src="assets/js/index.js"></script>
		<script type="text/javascript" src="assets/js/comment.js"></script>

		<style scoped>

		</style>
		<script type="text/javascript">
			let data = {
				app: "",

				value: "1",

				canSave: true,
				Read: true,

				Rocdata: [],
				Roclength: 0,

				dataimg: true,
				databox: false,
				heliosUser: heliosUser[0] == $session || heliosUser[1] == $session || heliosUser[2] == $session,

			}



			var Helios = new Vue({
				el: "#content",
				data: data,
				beforeMount() {
					this.Getroc_Data();
				},
				mounted() {
					$("body").resize();
				},

				methods: {
					Getroc_Data(index) {
						util.SetHeliosDevMsg();

						if (index >= 0) {
							this.$data.Read = false;
						}

						/* var obj1 = [183, 184, 185, 186, 8, 189, 1, 2, 3, 4, 5, 202, 203, 198, 199, 187, 188 ,191, 193]; */

						var obj1 = [183, 184, 185, 186, 8, 189, 1, 2, 3, 4, 5, 187, 188];


						if (this.$data.heliosUser) {
							obj1.splice(11, 0, 202, 203, 198, 199);
							obj1.splice(17, 0, 191, 193, 195);

						}



						/* obj1.push(1, 2, 3, 4, 5); */
						/* RF */
						/* 	obj1.push(202, 203, 198, 199); */
						/* DL */
						/* obj1.push(187, 188, 191, 193); */
						/*190,  PA */
						var obj = {
							"data": obj1.join(),
							"action": "READ"
						}
						setTimeout(function() {

							util.getattrajax(obj, function(data) {

								console.log(data);

								var getdata = [];
								var data = data.data;
								if (data.length > 0) {
									if (index >= 0) {
										setTimeout(() => {
											Helios.$data.Read = true;
											toast.$message({
												//message: "success:ROC" + index,
												message: "success",
												type: 'success',
												showClose: true,
												offset: 40
											});
										}, 550);
									}

									for (var i = 0; i < data.length; i++) {
										if (data[i].adr == 183) {
											let obj = {
												name: "UL PIN",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											Helios.Roclength = obj.value.length;
											getdata.push(obj);
										}
										if (data[i].adr == 184) {
											let obj = {
												name: "DL POUT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 185) {
											let obj = {
												name: "DL PA POUT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 186) {
											let obj = {
												name: "PA TEMP",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 8) {
											let obj = {
												name: "FEEDBACK",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 189) {
											let obj = {
												name: "DL PA STATUS",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 1) {
											let obj = {
												name: "UL FREQ",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 2) {
											let obj = {
												name: "DL FREQ",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 3) {
											let obj = {
												name: "BANDWIDTH",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 4) {
											let obj = {
												name: "UL ATT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 5) {
											let obj = {
												name: "DL ATT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 202) {
											let obj = {
												name: "DL ATT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 203) {
											let obj = {
												name: "DL ATT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 198) {
											let obj = Helios.ResTruefalse("LP ALARM", data[i].adr, data[i].value.split(","));
											getdata.push(obj);
										}
										if (data[i].adr == 199) {
											let obj = Helios.ResTruefalse("OP ALARM", data[i].adr, data[i].value.split(","));
											getdata.push(obj);
										}

										if (data[i].adr == 187) {
											let obj = {
												name: "DL_PA_ATT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 188) {
											let obj = Helios.ResTF("DL_PA_SW", data[i].adr, data[i].value.split(","));
											getdata.push(obj);
										}
										/* if (data[i].adr == 190) {
											let obj = {
												name: "DL_PA_VSWR",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										} */
										if (data[i].adr == 191) {
											let obj = Helios.ResTruefalse("PA FAULT ALARM", data[i].adr, data[i].value.split(","));
											getdata.push(obj);
										}
										if (data[i].adr == 193) {
											let obj = Helios.ResTruefalse("PA VSWR ALARM", data[i].adr, data[i].value.split(","));
											getdata.push(obj);
										}
										if (data[i].adr == 195) {
											let obj = Helios.ResTruefalse("PA Over Temp Alarm", data[i].adr, data[i].value.split(","));
											getdata.push(obj);
										}
									}

									Helios.Rocdata = getdata;



								} else {
									util.error("Error");
								}
							});

						}, 500);


						setTimeout(function() {
							Helios.dataimg = false;
							Helios.databox = true;
						}, 1200);


					},


					Setroc_Data(index) {
						util.SetHeliosDevMsg();
						Helios.$data.canSave = false;
						var adr = [];
						adr.push(1, 2, 3, 4, 5); /* RF */
						adr.push(202, 203, 198, 199); /* DL */
						adr.push(187, 188, 191, 193, 195); /* 190,PA */


						var data = [];


						let start = {
							adr: 204,
							value: "1"
						}
						data.push(start);

						for (var j = 0; j < Helios.Rocdata.length; j++) {
							let obj = {
								adr: "",
								value: ""
							}
							//获取6条
							var RocdataValue = Helios.Rocdata[j].value;

							var agent = Helios.Rocdata[j].agent;
							var enbale = Helios.Rocdata[j].enbale;

							if (Helios.Rocdata[j].adr == 1) {
								obj.adr = Helios.Rocdata[j].adr;
								//设置第几条
								RocdataValue[index] = (Helios.Rocdata[j].value[index]);
								obj.value = RocdataValue.join(); //
								data.push(obj)
							}
							if (Helios.Rocdata[j].adr == 2) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = (Helios.Rocdata[j].value[index]);
								obj.value = RocdataValue.join();
								data.push(obj)
							}

							if (Helios.Rocdata[j].adr == 3) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = (Helios.Rocdata[j].value[index]);
								obj.value = RocdataValue.join();
								data.push(obj)
							}
							if (Helios.Rocdata[j].adr == 4) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = (Helios.Rocdata[j].value[index]);
								obj.value = RocdataValue.join();
								data.push(obj)
							}
							if (Helios.Rocdata[j].adr == 5) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = Helios.Rocdata[j].value[index];
								obj.value = RocdataValue.join();
								data.push(obj)
							}

							if (Helios.Rocdata[j].adr == 202) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = Helios.Rocdata[j].value[index];
								obj.value = RocdataValue.join();
								data.push(obj)
							}
							if (Helios.Rocdata[j].adr == 203) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = Helios.Rocdata[j].value[index];
								obj.value = RocdataValue.join();
								data.push(obj)
							}
							if (Helios.Rocdata[j].adr == 198) {
								obj.adr = Helios.Rocdata[j].adr;
								//  一个重点****
								agent[index] = (Helios.Rocdata[j].agent[index]);
								enbale[index] = (Helios.Rocdata[j].enbale[index]);
								obj.value = Helios.resnumber(agent, enbale);
								data.push(obj);
							}
							if (Helios.Rocdata[j].adr == 199) {
								obj.adr = Helios.Rocdata[j].adr;
								agent[index] = (Helios.Rocdata[j].agent[index]);
								enbale[index] = (Helios.Rocdata[j].enbale[index]);
								obj.value = Helios.resnumber(agent, enbale);
								data.push(obj);
							}
							if (Helios.Rocdata[j].adr == 187) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = Helios.Rocdata[j].value[index];
								obj.value = RocdataValue.join();
								data.push(obj)
							}
							if (Helios.Rocdata[j].adr == 188) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = Helios.Rocdata[j].value[index];
								obj.value = Helios.resN(RocdataValue);
								data.push(obj);
							}
							/* 	if (Helios.Rocdata[j].adr == 190) {
									obj.adr = Helios.Rocdata[j].adr;
									RocdataValue[index] = Helios.Rocdata[j].value[index];
									obj.value = RocdataValue.join();
									data.push(obj)
								} */
							if (Helios.Rocdata[j].adr == 191) {
								obj.adr = Helios.Rocdata[j].adr;
								agent[index] = (Helios.Rocdata[j].agent[index]);
								enbale[index] = (Helios.Rocdata[j].enbale[index]);
								obj.value = Helios.resnumber(agent, enbale);
								data.push(obj);
							}
							if (Helios.Rocdata[j].adr == 193) {
								obj.adr = Helios.Rocdata[j].adr;
								agent[index] = (Helios.Rocdata[j].agent[index]);
								enbale[index] = (Helios.Rocdata[j].enbale[index]);
								obj.value = Helios.resnumber(agent, enbale);
								data.push(obj);
							}
							if (Helios.Rocdata[j].adr == 195) {
								obj.adr = Helios.Rocdata[j].adr;
								agent[index] = (Helios.Rocdata[j].agent[index]);
								enbale[index] = (Helios.Rocdata[j].enbale[index]);
								obj.value = Helios.resnumber(agent, enbale);
								data.push(obj);
							}
						}

						let end = {
							adr: 205,
							value: "1"
						}
						data.push(end);

						var obj = {
							"data": JSON.stringify(data),
							"action": "SET"
						}


						setTimeout(function() {

							util.postattrajax(obj, function(data) {

								if (1 != data) {
									toast.$message({
										message: ' Error' + data,
										type: 'error',
										showClose: true,
										offset: 40
									});
								} else {
									setTimeout(() => {
										Helios.$data.canSave = true;
										toast.$message({
											//message: "success:ROC" + index,
											message: "success",
											type: 'success',
											showClose: true,
											offset: 40
										});
									}, 1200);
								}
							});

						}, 500);


					},


					//真假转换
					ResTruefalse(name, adr, value) {
						let obj = {
							name: "",
							adr: "",
							agent: [],
							enbale: [],
						}
						obj.adr = adr;
						obj.name = name;

						for (var i = 0; i < value.length; i++) {
							if ("0" == value[i]) {
								obj.agent.push(false);
								obj.enbale.push(false);
							}
							if ("1" == value[i]) {
								obj.agent.push(false);
								obj.enbale.push(true);
							}
							if ("2" == value[i]) {
								obj.agent.push(true);
								obj.enbale.push(false);
							}
							if ("3" == value[i]) {
								obj.agent.push(true);
								obj.enbale.push(true);
							}
						}
						return obj;
					},


					ResTF(name, adr, value) {
						let obj = {
							name: "",
							adr: "",
							value: [],
						}
						obj.adr = adr;
						obj.name = name;

						for (var i = 0; i < value.length; i++) {
							if ("0" == value[i]) {
								obj.value.push(false);
							}
							if ("1" == value[i]) {
								obj.value.push(true);
							}
						}
						return obj;
					},



					//真假转换为数字
					resnumber(agent, enbale) {
						let make = [];
						for (var i = 0; i < Helios.Roclength; i++) {
							if (agent[i] == false && enbale[i] == false) {
								make.push("0");
							} else if (agent[i] == false && enbale[i] == true) {
								make.push("1");
							} else if (agent[i] == true && enbale[i] == false) {
								make.push("2");
							} else if (agent[i] == true && enbale[i] == true) {
								make.push("3");
							}
						}
						return make.join();
					},

					resN(value) {
						let make = [];
						for (var i = 0; i < Helios.Roclength; i++) {
							if (value[i] == false) {
								make.push("0");
							} else if (value[i] == true) {
								make.push("1");
							}
						}
						return make.join();
					},
				},

				filters: {
					bandname: function(value) {
						if (0 == value) {
							return "1st Band"
						} else if (1 == value) {
							return "2nd Band"
						}
						if (2 == value) {
							return "3rd Band"
						} else if (3 == value) {
							return "4th Band"
						} else if (4 == value) {
							return "5th Band"
						} else if (5 == value) {
							return "6th Band"
						}
					}
				},
			});
		</script>
	</body>
</html>
