<!DOCTYPE html>
<html>

	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>Helios </title>
		<link rel="stylesheet" href="assets/css/bootstrap.min.css?2019827" />
		<link rel="stylesheet" href="assets/css/global.css?2019827" />
		<!-- Font Awesome -->
		<link rel="stylesheet" href="assets/css/font-awesome.min.css?2019827" />
		<!-- Theme style -->
		<link rel="stylesheet" href="assets/css/AdminLTE.min.css?2019827" />
		<link rel="stylesheet" href="assets/css/skins/skin-black.min.css?2019827" />
		<link rel="stylesheet" href="assets/css/index.css?2019827">
	</head>
	<style>
		[class*="col-grid-s"]>li {
			width: 410px;
		}
			
		.nav-tabs-custom li {
			width: 120%;
		}
			
		.box .box-footer {
			border-top: 0px;
		}
			
		.label {
			font-size: 120%;
		}
			
		.el-dialog {
			width: 30%;
		}
			
		td span small {
			cursor: pointer;
		}
			
		.el-button--mini,
		.el-button--mini.is-round {
			padding: 1px 3px;
			color: #fff
		}
			
		.viswCard span {
			color: #fff;
			margin-right: 0px;
		}
			
		.table-hover td {
			text-indent: 6px;
		}
			
		.table>tbody>tr.add>td,
		.table>tbody>tr>td.res {
			font-weight: bold;
			color: #333;
		}
			
		.viswCard {
			position: inherit;
			top: 4px;
			width: 122px;
		}
			
		.table.res td .label {
			margin-left: 5px;
			float: right;
		}
		tr td:nth-child(4),
		tr.res td:nth-child(5) {
			background-color: rgb(218, 219, 219);
		}
		tr.res td:nth-child(4) {
			background-color: #fff;
		}	
		div.col-xs-2 {
			padding: 0px !important;
			width:20% !important;
		}
		div.col-xs-2.hover{
			width:13% !important;
		}
		.dataTable td{
			height: 45px;
		}
		.el-checkbox-group{
			margin-right: 0px;
			margin-left: 13px;
			float: left;
		}
		.el-checkbox__label{
			padding-left: 2px !important;
		}
		.el-checkbox__inner{
			vertical-align: 1px;
		}
		.col-xs-2.hover:hover{
			background:#efefef;
		}
		.rescss{
			font-size: 35px !important;
			display: inline-block;
			height: 20px;
			line-height: 20px;
			vertical-align: -1px;
			margin-top: 8px;
		}
</style>
	<body>
		<!-- hold-transition skin-blue-light sidebar-mini sidebar-collapse -->
		<div class="wrapper" id="content" style="background:#f1f4f6; margin-top: 2px;">
			<div class="box">

				<div class="box-body" style="text-align: center; height: 95vh;" v-show="dataimg">
					<img src="assets/images/wifi.gif" style="margin-top: 10%;">
				</div>

				<div class="box-body table-responsive no-padding" v-show="databox">
					<div class="col-xs-2 " style=" float:left">
						<table class="table res table-bordered  dataTable first">
							<tbody>
								<tr>
									<td colspan="2" style="height:45px"> </td>
								</tr>
								<tr>
									<td colspan="2">
										<span class="icon iconfont icon-kongzhitai"></span>
										<b>Band</b></td>
								</tr>
								<tr>
									<td colspan="2"><b>UL I/P -DSP </b><span class="text-green "> (dBm)</span></td>
								</tr>
								<tr>
									<td colspan="2"><b>DL O/P -DSP </b><span class="text-green "> (dBm)</span></td>
								</tr>

								<tr>
									<td colspan="2"><b>DL PA O/P</b> <span class="text-green "> (dBm)</span></td>
								</tr>
								<tr>
									<td colspan="2"> <b>DL PA Temp</b> <span class="text-green "> (°C)</span></td>
								</tr>

								<tr>
									<td colspan="2"><b>Digital Board Feedback Power</b><span class="text-green "> (dBm)</span></td>

								<tr>
									<td colspan="2"><b>TD-LTE UL and DL Ratio</b></td>
								</tr>
								<tr>
									<td colspan="2"><b>TDD Special Time Slot Ratio</b></td>
								</tr>
								<tr>
									<td colspan="2"><b>DL PA Status</b></td>
								</tr>

								<tr>
									<td rowspan="5"><b>RF</b></td>
									<td>UL Freq <span class="text-green ">(MHz)</span></td>
								</tr>
								<tr>
									<td>DL Freq <span class="text-green ">(MHz)</span></td>
								</tr>
								<tr>
									<td>UL ATT <span class="text-green ">(dB)</span></td>
								</tr>
								<tr>
									<td>DL ATT <span class="text-green ">(dB)</span></td>
								</tr>
								<tr>
									<td>Bandwidth <span class="text-green ">(MHz)</span></td>
								</tr>
								<tr>
									<td rowspan="4"><b>DL</b></td>
									<td>DL O/P Underpower Threshold <span class="text-green ">(dBm)</span></td>
								</tr>
								<tr>
									<td>DL O/P Overpower Threshold <span class="text-green ">(dBm)</span></td>
								</tr>
								<tr>
									<td>DL O/P Underpower Alarm</td>
								</tr>
								<tr>
									<td>DL O/P Overpower Alarm</td>
								</tr>

								<tr>
									<td rowspan="6"><b>PA</b></td>
									<td>DL PA ATT </td>
								</tr>
								<tr>
									<td>DL PA Enable</td>
								</tr>

								<tr>
									<td>PA Failure Alarm</td>
								</tr>

								<tr>
									<td>PA VSWR Alarm</td>
								</tr>
								<tr>
									<td>PA Over Temp Alarm</td>
								</tr>
							<tbody>
						</table>
					</div>

					<!-- 数据循环 -->
					<div class="col-xs-2 hover" v-for="(v,i) in Roclength">
						<table class="table res table-bordered  dataTable">
							<tbody>
								<tr>
									<td style="height:45px" align="center">
										<div class="viswCard">
											<el-button type="success" :disabled="!canSave" size="mini" @click="Setroc_Data(i)">Set
											</el-button> &nbsp;&nbsp;
											<el-button type="primary" :disabled="!Read" size="mini" @click="Getroc_Data(i)">Read
											</el-button>
										</div>
									</td>
								</tr>
								<tr>
									<td v-html="$options.filters.bandname(i)"></td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata">
									<td v-if="vv.adr==183" v-html="vv.value[i]">
									</td>
									<td v-if="vv.adr==184" v-html="vv.value[i]">
									</td>
									<td v-if="vv.adr==185" v-html="vv.value[i]">
									</td>
									<td v-if="vv.adr==186" v-html="vv.value[i]">
									</td>
									<td v-if="vv.adr==8" v-html="vv.value[i]">
									</td>
									<!-- <td v-if="vv.adr==288" v-html="vv.value[i] | ">
										 
									</td> -->
									<td v-if="vv.adr==288" v-html="$options.filters.lengthfour(vv.value[i],i)">
									</td>

									<td v-if="vv.adr==289" v-html="$options.filters.lengthfour(vv.value[i],i)">
									</td>
									<!-- 
									<td v-if="vv.adr==289">
										<spsn v-if="4>i">{{vv.value[i]}}</spsn>
										<span v-else>--</span>
									</td> -->

									<td v-if="vv.adr==189" style="padding:0 10px;" v-html="$options.filters.isno_of(vv.value[i])">
										<!-- v-html="$options.filters.isno_of(vv.value[i])" -->
										<!-- <i class="icon iconfont icon-on-off text-green rescss" v-if="Number(vv.value[i])==1"></i>
										<i class=" icon iconfont icon-off rescss" v-else></i> -->
									</td>


									<td v-if="vv.adr==1">
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>
									<td v-if="vv.adr==2">
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>
									<td v-if="vv.adr==4">
										<el-select v-model="vv.value[i]" size="mini">
											<el-option v-for="(v,i) in 31" :label="i" :value="i"></el-option>
										</el-select>
									</td>
									<td v-if="vv.adr==5">
										<el-select v-model="vv.value[i]" size="mini">
											<el-option v-for="(v,i) in 31" :label="i" :value="i"></el-option>
										</el-select>
									</td>
									<td v-if="vv.adr==3">
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>
									<td v-if="vv.adr==202">
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>

									<td v-if="vv.adr==203">
										<el-input v-model="vv.value[i]" size="mini"></el-input>
									</td>
								</tr>

								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==198">
									<td style=" padding: 0px;" v-if="heliosUser">
										<el-checkbox-group v-model="vv.agent[i]" size="small">
											<el-checkbox label="Agent" border></el-checkbox>
										</el-checkbox-group>

										<el-checkbox-group v-model="vv.enbale[i]" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
									<td v-else style="padding: 6px;">
										<el-checkbox-group v-model="vv.enbale[i]" size="small" v-if="heliosUser1 && vv.Agentenable[i]">
											<el-checkbox label="Enable" border disabled="disabled" readonly="readonly"></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="vv.enbale[i]" size="small" v-else-if="vv.Agentenable[i] && !heliosUser1">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
										<div role="group" aria-label="checkbox-group" class="el-checkbox-group" v-else>
											<label role="checkbox" class="el-checkbox el-checkbox--small is-bordered" style="border: none; cursor: auto;">--</label>
										</div>

									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==199">
									<td style=" padding: 0px;" v-if="heliosUser">
										<el-checkbox-group v-model="vv.agent[i]" size="small">
											<el-checkbox label="Agent" border></el-checkbox>
										</el-checkbox-group>

										<el-checkbox-group v-model="vv.enbale[i]" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
									<td v-else style="padding: 6px;">
										<el-checkbox-group v-model="vv.enbale[i]" size="small" v-if="heliosUser1 && vv.Agentenable[i]">
											<el-checkbox label="Enable" border disabled="disabled" readonly="readonly"></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="vv.enbale[i]" size="small" v-else-if="vv.Agentenable[i] && !heliosUser1">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
										<div role="group" aria-label="checkbox-group" class="el-checkbox-group" v-else>
											<label role="checkbox" class="el-checkbox el-checkbox--small is-bordered" style="border: none; cursor: auto;">--</label>
										</div>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata">
									<td v-if="vv.adr==187">
										<el-select v-model="vv.value[i]" size="mini">
											<el-option v-for="(v,i) in 26" :label="i" :value="i"></el-option>
										</el-select>

									</td>

									<td v-if="vv.adr==188">
										<el-switch v-model="vv.value[i]"></el-switch>
									</td>
								</tr>

								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==191">
									<td style=" padding: 0px;" v-if="heliosUser">
										<el-checkbox-group v-model="vv.agent[i]" size="small">
											<el-checkbox label="Agent" border></el-checkbox>
										</el-checkbox-group>

										<el-checkbox-group v-model="vv.enbale[i]" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
									<td v-else style="padding: 6px;">
										<el-checkbox-group v-model="vv.enbale[i]" size="small" v-if="heliosUser1 && vv.Agentenable[i]">
											<el-checkbox label="Enable" border disabled="disabled" readonly="readonly"></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="vv.enbale[i]" size="small" v-else-if="vv.Agentenable[i] && !heliosUser1">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
										<div role="group" aria-label="checkbox-group" class="el-checkbox-group" v-else>
											<label role="checkbox" class="el-checkbox el-checkbox--small is-bordered" style="border: none; cursor: auto;">--</label>
										</div>
									</td>
								</tr>
								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==193">
									<td style=" padding: 0px;" v-if="heliosUser">
										<el-checkbox-group v-model="vv.agent[i]" size="small">
											<el-checkbox label="Agent" border></el-checkbox>
										</el-checkbox-group>

										<el-checkbox-group v-model="vv.enbale[i]" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
									<td v-else style="padding: 6px;">
										<el-checkbox-group v-model="vv.enbale[i]" size="small" v-if="heliosUser1 && vv.Agentenable[i]">
											<el-checkbox label="Enable" border disabled="disabled" readonly="readonly"></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="vv.enbale[i]" size="small" v-else-if="vv.Agentenable[i] && !heliosUser1">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
										<div role="group" aria-label="checkbox-group" class="el-checkbox-group" v-else>
											<label role="checkbox" class="el-checkbox el-checkbox--small is-bordered" style="border: none; cursor: auto;">--</label>
										</div>
									</td>
								</tr>

								<tr v-for="(vv,jj) in Rocdata" v-if="vv.adr==195">
									<!-- <td style=" padding: 0px;">
										<el-checkbox-group v-model="vv.agent[i]" size="small">
											<el-checkbox label="Agent" border></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="vv.enbale[i]" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td> -->
									<td style=" padding: 0px;" v-if="heliosUser">
										<el-checkbox-group v-model="vv.agent[i]" size="small">
											<el-checkbox label="Agent" border></el-checkbox>
										</el-checkbox-group>

										<el-checkbox-group v-model="vv.enbale[i]" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
									<td v-else style="padding: 6px;">
										<el-checkbox-group v-model="vv.enbale[i]" size="small" v-if="heliosUser1 && vv.Agentenable[i]">
											<el-checkbox label="Enable" border disabled="disabled" readonly="readonly"></el-checkbox>
										</el-checkbox-group>
									<el-checkbox-group v-model="vv.enbale[i]" size="small" v-else-if="vv.Agentenable[i] && !heliosUser1">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
										<div role="group" aria-label="checkbox-group" class="el-checkbox-group" v-else>
											<label role="checkbox" class="el-checkbox el-checkbox--small is-bordered" style="border: none; cursor: auto;">--</label>
										</div>
									</td>
								</tr>

								<tr>
									<td style="height:45px" align="center">
										<div class="viswCard">
											<el-button type="success" :disabled="!canSave" size="mini" @click="Setroc_Data(i)">Set
											</el-button> &nbsp;&nbsp;
											<el-button type="primary" :disabled="!Read" size="mini" @click="Getroc_Data(i)">Read
											</el-button>
										</div>
									</td>
								</tr>
							</tbody>
						</table>
					</div>
					<!-- 数据循环 -->
				</div>
			</div>

		</div>
		</div>
		</div>
		<script type="text/javascript" src="assets/js/jquery.js"></script>
		<script type="text/javascript" src="assets/js/vue.js"></script>
		<script type="text/javascript" src="assets/js/index.js"></script>
		<script type="text/javascript" src="assets/js/comment.js"></script>


		<script type="text/javascript">
			let data = {
				value: "1",
				canSave: true,
				Read: true,

				Rocdata: [],
				Roclength: 0,

				dataimg: true,
				databox: false,

				heliosUser: heliosUser[0] == $session,
				heliosUser1: heliosUser[3] == $session,

			}

			var Helios = new Vue({
				el: "#content",
				data: data,
				beforeMount() {
					this.Getroc_Data();
				},
				mounted() {
					$("body").resize();
				},

				methods: {
					Getroc_Data(index) {
						util.SetHeliosDevMsg();
						if (index >= 0) {
							this.$data.Read = false;
						}
						/* var obj1 = [183, 184, 185, 186, 8, 189, 1, 2, 3, 4, 5, 202, 203, 198, 199, 187, 188 ,191, 193]; */
						var obj1 = [183, 184, 185, 186, 8, 288, 289, 189, 1, 2, 4, 5, 3, 202, 203, 198, 199, 187, 188, 191, 193, 195];
						/* if (this.$data.heliosUser1) {
							obj1.splice(11, 0, 202, 203, 198, 199);
							obj1.splice(17, 0, 191, 193, 195);
						} */
						/* obj1.push(1, 2, 3, 4, 5); */
						/* RF */
						/* 	obj1.push(202, 203, 198, 199); */
						/* DL */
						/* obj1.push(187, 188, 191, 193); */
						/*190,  PA */
						var obj = {
							"data": obj1.join(),
							"action": "READ"
						}
						setTimeout(function() {
							util.getattrajax(obj, function(data) {
								var getdata = [];
								var data = data.data;
								if (data.length > 0) {
									if (index >= 0) {
										setTimeout(() => {
											Helios.$data.Read = true;
											util.success('success');
										}, 100);
									}
									for (var i = 0; i < data.length; i++) {
										if (data[i].adr == 183) {
											let obj = {
												name: "UL PIN",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											Helios.Roclength = obj.value.length;
											getdata.push(obj);
										}
										if (data[i].adr == 184) {
											let obj = {
												name: "DL POUT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 185) {
											let obj = {
												name: "DL PA POUT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 186) {
											let obj = {
												name: "PA TEMP",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 8) {
											let obj = {
												name: "FEEDBACK",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}

										if (data[i].adr == 288) {
											let obj = {
												name: "TD-LTE UL and DL Ratio",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}

										if (data[i].adr == 289) {
											let obj = {
												name: "TDD Special Time Slot Ratio",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 189) {
											let obj = {
												name: "DL PA STATUS",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}

										if (data[i].adr == 1) {
											let obj = {
												name: "UL FREQ",
												adr: data[i].adr,
												value: util.divide(data[i].value.split(","), 0),
											}
											getdata.push(obj);
										}
										if (data[i].adr == 2) {
											let obj = {
												name: "DL FREQ",
												adr: data[i].adr,
												value: util.divide(data[i].value.split(","), 0),
											}
											getdata.push(obj);
										}
										if (data[i].adr == 3) {
											let obj = {
												name: "BANDWIDTH",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 4) {
											let obj = {
												name: "UL ATT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 5) {
											let obj = {
												name: "DL ATT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 202) {
											let obj = {
												name: "DL ATT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 203) {
											let obj = {
												name: "DL ATT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 198) {
											let obj = util.ResTruefalseArray("LP ALARM", data[i].adr, data[i].value.split(","));
											getdata.push(obj);
										}
										if (data[i].adr == 199) {
											let obj = util.ResTruefalseArray("OP ALARM", data[i].adr, data[i].value.split(","));
											getdata.push(obj);
										}
										if (data[i].adr == 187) {
											let obj = {
												name: "DL_PA_ATT",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										}
										if (data[i].adr == 188) {
											let obj = util.HeliosEnable("DL PA Enable", data[i].adr, data[i].value.split(","));
											getdata.push(obj);
										}
										/* if (data[i].adr == 190) {
											let obj = {
												name: "DL_PA_VSWR",
												adr: data[i].adr,
												value: data[i].value.split(",")
											}
											getdata.push(obj);
										} */
										if (data[i].adr == 191) {
											let obj = util.ResTruefalseArray("PA FAULT ALARM", data[i].adr, data[i].value.split(","));
											getdata.push(obj);
										}
										if (data[i].adr == 193) {
											let obj = util.ResTruefalseArray("PA VSWR ALARM", data[i].adr, data[i].value.split(","));
											getdata.push(obj);
										}
										if (data[i].adr == 195) {
											let obj = util.ResTruefalseArray("PA Over Temp Alarm", data[i].adr, data[i].value.split(","));
											getdata.push(obj);
										}
									}
									setTimeout(function() {
										Helios.dataimg = false;
										Helios.databox = true;
									}, 1500);

									Helios.Rocdata = getdata;
								} else {
									util.error("Error");
								}
							});
						}, 100);

					},


					Setroc_Data(index) {
						util.SetHeliosDevMsg();
						Helios.$data.canSave = false;
						var adr = [];
						adr.push(1, 2, 3, 4, 5); /* RF */
						adr.push(202, 203, 198, 199); /* DL */
						adr.push(187, 188, 191, 193, 195); /* 190,PA */


						var data = [];


						let start = {
							adr: 204,
							value: "1"
						}
						data.push(start);

						for (var j = 0; j < Helios.Rocdata.length; j++) {
							let obj = {
								adr: "",
								value: ""
							}
							//获取6条
							var RocdataValue = Helios.Rocdata[j].value;

							var agent = Helios.Rocdata[j].agent;
							var enbale = Helios.Rocdata[j].enbale;

							if (Helios.Rocdata[j].adr == 1) {
								obj.adr = Helios.Rocdata[j].adr;
								//设置第几条
								RocdataValue[index] = (Helios.Rocdata[j].value[index]);
								//obj.value = RocdataValue.join();
								obj.value = util.divide(RocdataValue, 1),
									data.push(obj)
							}
							if (Helios.Rocdata[j].adr == 2) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = (Helios.Rocdata[j].value[index]);
								obj.value = util.divide(RocdataValue, 1),
									data.push(obj)
							}

							if (Helios.Rocdata[j].adr == 3) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = (Helios.Rocdata[j].value[index]);
								obj.value = RocdataValue.join();
								data.push(obj)
							}
							if (Helios.Rocdata[j].adr == 4) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = (Helios.Rocdata[j].value[index]);
								obj.value = RocdataValue.join();
								data.push(obj)
							}
							if (Helios.Rocdata[j].adr == 5) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = Helios.Rocdata[j].value[index];
								obj.value = RocdataValue.join();
								data.push(obj)
							}

							if (Helios.Rocdata[j].adr == 202) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = Helios.Rocdata[j].value[index];
								obj.value = RocdataValue.join();
								data.push(obj)
							}
							if (Helios.Rocdata[j].adr == 203) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = Helios.Rocdata[j].value[index];
								obj.value = RocdataValue.join();
								data.push(obj)
							}
							if (Helios.Rocdata[j].adr == 198) {
								obj.adr = Helios.Rocdata[j].adr;
								//  一个重点****
								agent[index] = (Helios.Rocdata[j].agent[index]);
								enbale[index] = (Helios.Rocdata[j].enbale[index]);
								obj.value = util.resnumberArray(agent, enbale);
								data.push(obj);
							}
							if (Helios.Rocdata[j].adr == 199) {
								obj.adr = Helios.Rocdata[j].adr;
								agent[index] = (Helios.Rocdata[j].agent[index]);
								enbale[index] = (Helios.Rocdata[j].enbale[index]);
								obj.value = util.resnumberArray(agent, enbale);
								data.push(obj);
							}
							if (Helios.Rocdata[j].adr == 187) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = Helios.Rocdata[j].value[index];
								obj.value = RocdataValue.join();
								data.push(obj)
							}
							if (Helios.Rocdata[j].adr == 188) {
								obj.adr = Helios.Rocdata[j].adr;
								RocdataValue[index] = Helios.Rocdata[j].value[index];
								obj.value = util.HeliosNumberRes(RocdataValue);
								data.push(obj);
							}
							/* 	if (Helios.Rocdata[j].adr == 190) {
									obj.adr = Helios.Rocdata[j].adr;
									RocdataValue[index] = Helios.Rocdata[j].value[index];
									obj.value = RocdataValue.join();
									data.push(obj)
								} */
							if (Helios.Rocdata[j].adr == 191) {
								obj.adr = Helios.Rocdata[j].adr;
								agent[index] = (Helios.Rocdata[j].agent[index]);
								enbale[index] = (Helios.Rocdata[j].enbale[index]);
								obj.value = util.resnumberArray(agent, enbale);
								data.push(obj);
							}
							if (Helios.Rocdata[j].adr == 193) {
								obj.adr = Helios.Rocdata[j].adr;
								agent[index] = (Helios.Rocdata[j].agent[index]);
								enbale[index] = (Helios.Rocdata[j].enbale[index]);
								obj.value = util.resnumberArray(agent, enbale);
								data.push(obj);
							}
							if (Helios.Rocdata[j].adr == 195) {
								obj.adr = Helios.Rocdata[j].adr;
								agent[index] = (Helios.Rocdata[j].agent[index]);
								enbale[index] = (Helios.Rocdata[j].enbale[index]);
								obj.value = util.resnumberArray(agent, enbale);
								data.push(obj);
							}
						}

						let end = {
							adr: 205,
							value: "1"
						}
						data.push(end);

						var obj = {
							"data": JSON.stringify(data),
							"action": "SET"
						}

						setTimeout(function() {
							util.postattrajax(obj, function(data) {
								if (1 != data) {
									util.error('Error');
								} else {
									setTimeout(() => {
										Helios.$data.canSave = true;
										util.success('success');

									}, 100);
								}
							});
						}, 100);
					},

				},

				filters: {
					bandname: function(value) {
						if (0 == value) {
							return "1st Band"
						} else if (1 == value) {
							return "2nd Band"
						}
						if (2 == value) {
							return "3rd Band"
						} else if (3 == value) {
							return "4th Band"
						} else if (4 == value) {
							return "5th Band"
						} else if (5 == value) {
							return "6th Band"
						}
					},
					/* isno_of: function(v) {
						if (1 <= Number(v)) {
							return `<i class="icon iconfont icon-on-off text-green rescss></i>`
						} else {
							return `<i class="icon iconfont icon-off text-red rescss"></i>`
						}
					}, */
					isno_of: function(v) {
						return (0 == Number(v)) ?
							` <i class="icon iconfont icon-off  rescss" ></i>` :
							`<i class="icon iconfont icon-on-off text-green rescss"></i>`;

					},
					lengthfour: function(msg, i) {
						return (4 > i) ? msg : "--";
					}
				},
			});
		</script>
	</body>
</html>
