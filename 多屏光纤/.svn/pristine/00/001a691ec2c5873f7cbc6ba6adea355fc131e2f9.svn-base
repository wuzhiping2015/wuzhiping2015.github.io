<!DOCTYPE html>
<html>

	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>Helios </title>
		<link rel="stylesheet" href="assets/css/bootstrap.min.css?2019827" />
		<link rel="stylesheet" href="assets/css/global.css?2019827" />
		<!-- Font Awesome -->
		<link rel="stylesheet" href="assets/css/font-awesome.min.css?2019827" />
		<!-- Theme style -->
		<link rel="stylesheet" href="assets/css/AdminLTE.min.css?2019827" />
		<link rel="stylesheet" href="assets/css/skins/skin-black.min.css?2019827" />
		<link rel="stylesheet" href="assets/css/index.css?2019827">
	</head>
	<style>
		.viswCard span {
	color: #fff;
	margin-right: 0px;
	}
	.box-header .el-button--mini, .el-button--mini.is-round {
		padding: 1px 3px;
		color: #fff;
	   vertical-align: middle;
	}
	.el-input{
		vertical-align: middle;
	}
	.label-text-vm {
	    text-align: left;
	}
	.box-header.with-border {
	    padding-bottom: 14px;
	}
	.col-md-12{ padding: 0px !important;}
		
	.col-xs-2 {
	    padding: 0px !important;
	    width:19.8% !important;
	}
	.no-padding .col-xs-2:nth-child(2)  .table-bordered, .no-padding .col-xs-2:nth-child(4)  .table-bordered{
		background: #f0f9eb !important;
	} 
	 .clear{
	 	 overflow: auto;
	 	  zoom: 1;
	 	  background: #fff;
	 }
	 .no-padding  .el-checkbox-group{
		 margin-right: 10px;
	}
	.dataTable td{
		height: 49px;
	}
	.col-xs-2 .icon{
		font-size: 23px;
	}
</style>

	<body>
		<!-- hold-transition skin-blue-light sidebar-mini sidebar-collapse -->
		<div class="wrapper" id="content" style="background:#f1f4f6; margin-top: 10px;">

			<div class="col-md-12" style="padding-left: 0px;">
				<div class="row">
					<!-- Optical START -->
					<div class="col-md-6">
						<div class="box">
							<div class="box-header with-border">
								<h3 class="box-title">Optical</h3>
								<div class="box-tools pull-right" style="top: 9px;">
									<el-button type="primary" @click="setLight" size="small" v-if="!heliosUser1">Set</el-button>
									<el-button size="small" @click="getOptical(1)">Read</el-button>
								</div>
							</div>
							<div class="clear" style="padding-top: 10px;">
								<el-form ref="Opticaldata" label-width="280px" size="medium">
									<div class="col-md-12" v-for="(v,i) in  Opticaldata" v-if="v.adr!=79">

										<el-form-item :label="v.name" v-if="heliosUser">
											<el-checkbox-group v-model="v.agent" size="small">
												<el-checkbox label="Agent Switch" border></el-checkbox>
											</el-checkbox-group>
											<el-checkbox-group v-model="v.enbale" size="small">
												<el-checkbox label="Enable" border></el-checkbox>
											</el-checkbox-group>
										</el-form-item>
										<el-form-item :label="v.name" v-else v-show="v.Agentenable">
											<el-checkbox-group v-model="v.enbale" size="small" v-if="heliosUser1">
												<el-checkbox label="Enable" border disabled="disabled" readonly="readonly"></el-checkbox>
											</el-checkbox-group>

											<el-checkbox-group v-model="v.enbale" size="small" v-else>
												<el-checkbox label="Enable" border></el-checkbox>
											</el-checkbox-group>
										</el-form-item>

									</div>

									<div class="col-md-12" v-for="(v,i) in  Opticaldata" v-if="v.adr==79">
										<el-form-item :label="v.name">
											<el-switch v-model="v.value" v-if="heliosUser1" disabled="disabled" readonly="readonly"> </el-switch>
											<el-switch v-model="v.value" v-else> </el-switch>

										</el-form-item>
									</div>

								</el-form>

							</div>
						</div>
					</div>
					<!-- Optical END -->


					<!-- Alarm start -->
					<div class="col-md-6">
						<div class="box">
							<div class="box-header with-border">
								<h3 class="box-title">Alarm</h3>
								<div class="box-tools pull-right" style="top: 9px; right:20px;">
									<el-button type="primary" @click="setAlarm" size="small" v-if="!heliosUser1">Set</el-button>
									<el-button size="small" @click="Alarm_read">Read</el-button>
								</div>
							</div>
							<div class="clear" style="padding-top: 10px;">
								<!-- 	<el-form ref="Alarmdata" label-width="280px" size="medium">
									<div class="col-md-12" v-for="(v,i) in  Alarmdata">
										<el-form-item :label="v.name" v-if="heliosUser">
											<el-checkbox-group v-model="v.agent" size="small">
												<el-checkbox label="Agent Switch" border></el-checkbox>
											</el-checkbox-group>

											<el-checkbox-group v-model="v.enbale" size="small">
												<el-checkbox label="Enable" border></el-checkbox>
											</el-checkbox-group>
										</el-form-item>
										<el-form-item :label="v.name" v-else v-show="heliosUser || v.Agentenable">
											<el-checkbox-group v-model="v.enbale" size="small">
												<el-checkbox label="Enable" border></el-checkbox>
											</el-checkbox-group>
										</el-form-item>
										 
									</div>
								</el-form> -->

								<el-form ref="Alarmdata" label-width="220px" size="medium">
									<div class="col-md-12" v-for="(v,i) in  Alarmdata">
										<el-form-item :label="v.name" v-if="heliosUser">
											<el-checkbox-group v-model="v.agent" size="small">
												<el-checkbox label="Agent Switch" border></el-checkbox>
											</el-checkbox-group>
											<el-checkbox-group v-model="v.enbale" size="small">
												<el-checkbox label="Enable" border></el-checkbox>
											</el-checkbox-group>
										</el-form-item>
										<el-form-item :label="v.name" v-else v-show="v.Agentenable">
											<el-checkbox-group v-model="v.enbale" size="small" v-if="heliosUser1">
												<el-checkbox label="Enable" border disabled="disabled" readonly="readonly"></el-checkbox>
											</el-checkbox-group>

											<el-checkbox-group v-model="v.enbale" size="small" v-else>
												<el-checkbox label="Enable" border></el-checkbox>
											</el-checkbox-group>
										</el-form-item>
									</div>
								</el-form>

							</div>
						</div>
					</div>
					<!-- Alarm END -->
				</div>
			</div>


			<!-- sync1 start -->
			<!-- 只有AU 才显示 -->
			<div class="col-md-12" style="background: #fff; margin-bottom: 30px;">
				<div class="box-header with-border">
					<h3 class="box-title">Sync</h3>
				</div>
				<div class="box-body table-responsive no-padding">
					<div class="col-xs-2">
						<table class="table res table-bordered  dataTable">
							<tbody>
								<tr>
									<td style="height: 49px;"></td>
								</tr>
								<tr>
									<td>Sync Type </td>
								</tr>
								<tr style="height:45px;" v-for="(v,i) in Syncdata1">
									<td>{{v.name}}</td>
								</tr>
							</tbody>
							<tbody></tbody>
						</table>
					</div>

					<div class="col-xs-2">
						<table class="table res table-bordered  dataTable">
							<tbody>
								<tr>
									<td style=" text-align: center;padding: 7px;">
										<el-button type="primary" @click="setSync(1)" size="small">Set</el-button>
										&nbsp;&nbsp;&nbsp;
										<el-button size="small" @click=getSync(1,1)>Read</el-button>
									</td>
								</tr>
								<tr>
									<td>Sync 1</td>
								</tr>

								<tr v-for="(v,i) in Syncdata1">
									<td v-if="v.adr==17">
										<el-switch v-model="v.value"> </el-switch>
									</td>
									<td v-if="v.adr==18">
										<el-select v-model="v.value" size="mini">
											<el-option v-for="(v,i) in 11" :label="i" :value="i"></el-option>
										</el-select>
									</td>
									<td v-if="v.adr==19">
										<!-- <el-input v-model="v.value" size="mini"></el-input> -->
										<el-select v-model="v.value" size="mini">
											<el-option v-for="(v,i) in 9" :label="i" :value="i"></el-option>
										</el-select>
									</td>
									<td v-if="v.adr==20">
										<el-radio v-model="v.value" label="0">Extend CP</el-radio>
										<el-radio v-model="v.value" label="1">Normal CP</el-radio>
									</td>
								</tr>
								<tr v-for="(v,i) in Syncdata1" v-if="v.adr==37">
									<td v-if="heliosUser">
										<el-checkbox-group v-model="v.agent" size="small">
											<el-checkbox label="Agent Switch" border></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="v.enbale" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
									<td v-else>
										<el-checkbox-group v-model="v.enbale" size="small" v-if="heliosUser1 && v.Agentenable">
											<el-checkbox label="Enable" border disabled="disabled" readonly="readonly"></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="v.enbale" size="small" v-else-if="v.Agentenable && !heliosUser1">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
										<span v-else>- -</span>
									</td>
								</tr>
							</tbody>
						</table>
					</div>

					<div class="col-xs-2">
						<table class="table res table-bordered  dataTable">
							<tbody>
								<tr>
									<td style=" text-align: center;padding: 7px;">
										<el-button type="primary" @click="setSync(2)" size="small">Set</el-button>
										&nbsp;&nbsp;&nbsp;
										<el-button size="small" @click=getSync(2,2)>Read</el-button>
									</td>
								</tr>
								<tr>
									<td>Sync2</td>
								</tr>
								<tr v-for="(v,i) in Syncdata2">
									<td v-if="v.adr==22">
										<el-switch v-model="v.value"> </el-switch>
									</td>
									<td v-if="v.adr==23">
										<el-select v-model="v.value" size="mini">
											<el-option v-for="(v,i) in 11" :label="i" :value="i"></el-option>
										</el-select>
									</td>

									<td v-if="v.adr==24">
										<el-select v-model="v.value" size="mini">
											<el-option v-for="(v,i) in 9" :label="i" :value="i"></el-option>
										</el-select>
									</td>
									<td v-if="v.adr==25">
										<el-radio v-model="v.value" label="0">Extend CP</el-radio>
										<el-radio v-model="v.value" label="1">Normal CP</el-radio>
									</td>
								</tr>
								<tr v-for="(v,i) in Syncdata2" v-if="v.adr==38">
									<td v-if="heliosUser">
										<el-checkbox-group v-model="v.agent" size="small">
											<el-checkbox label="Agent Switch" border></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="v.enbale" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
									<td v-else>
										<el-checkbox-group v-model="v.enbale" size="small" v-if="heliosUser1 && v.Agentenable">
											<el-checkbox label="Enable" border disabled="disabled" readonly="readonly"></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="v.enbale" size="small" v-else-if="v.Agentenable && !heliosUser1">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
										<span v-else>- -</span>
									</td>
								</tr>
							</tbody>
						</table>
					</div>


					<div class="col-xs-2">
						<table class="table res table-bordered  dataTable">
							<tbody>
								<tr>
									<td style=" text-align: center;padding: 7px;">
										<el-button type="primary" @click="setSync(3)" size="small">Set</el-button>
										&nbsp;&nbsp;&nbsp;
										<el-button size="small" @click=getSync(3,3)>Read</el-button>
									</td>
								</tr>
								<tr>
									<td>Sync3</td>
								</tr>

								<tr v-for="(v,i) in Syncdata3">
									<td v-if="v.adr==27">
										<el-switch v-model="v.value"> </el-switch>
									</td>

									<td v-if="v.adr==28">
										<el-select v-model="v.value" size="mini">
											<el-option v-for="(v,i) in 11" :label="i" :value="i"></el-option>
										</el-select>
									</td>
									<td v-if="v.adr==29">
										<el-select v-model="v.value" size="mini">
											<el-option v-for="(v,i) in 9" :label="i" :value="i"></el-option>
										</el-select>
									</td>
									<td v-if="v.adr==30">
										<el-radio v-model="v.value" label="0">Extend CP</el-radio>
										<el-radio v-model="v.value" label="1">Normal CP</el-radio>
									</td>

								</tr>


								<tr v-for="(v,i) in Syncdata3" v-if="v.adr==39">
									<td v-if="heliosUser">
										<el-checkbox-group v-model="v.agent" size="small">
											<el-checkbox label="Agent Switch" border></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="v.enbale" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
									<td v-else>
										<el-checkbox-group v-model="v.enbale" size="small" v-if="heliosUser1 && v.Agentenable">
											<el-checkbox label="Enable" border disabled="disabled" readonly="readonly"></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="v.enbale" size="small" v-else-if="v.Agentenable && !heliosUser1">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
										<span v-else>- -</span>
									</td>
								</tr>
							</tbody>
						</table>
					</div>

					<div class="col-xs-2">
						<table class="table res table-bordered  dataTable">
							<tbody>
								<tr>
									<td style=" text-align: center;padding: 7px;">
										<el-button type="primary" @click="setSync(4)" size="small">Set</el-button>
										&nbsp;&nbsp;&nbsp;
										<el-button size="small" @click=getSync(4,4)>Read</el-button>
									</td>
								</tr>
								<tr>
									<td>Sync4</td>
								</tr>

								<tr v-for="(v,i) in Syncdata4">
									<td v-if="v.adr==32">
										<el-switch v-model="v.value"> </el-switch>
									</td>

									<td v-if="v.adr==33">
										<el-select v-model="v.value" size="mini">
											<el-option v-for="(v,i) in 11" :label="i" :value="i"></el-option>
										</el-select>
									</td>
									<td v-if="v.adr==34">
										<el-select v-model="v.value" size="mini">
											<el-option v-for="(v,i) in 9" :label="i" :value="i"></el-option>
										</el-select>
									</td>

									<td v-if="v.adr==35">
										<el-radio v-model="v.value" label="0">Extend CP</el-radio>
										<el-radio v-model="v.value" label="1">Normal CP</el-radio>
									</td>
								</tr>

								<tr v-for="(v,i) in Syncdata4" v-if="v.adr==40">
									<td v-if="heliosUser">
										<el-checkbox-group v-model="v.agent" size="small">
											<el-checkbox label="Agent Switch" border></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="v.enbale" size="small">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
									</td>
									<td v-else>
										<el-checkbox-group v-model="v.enbale" size="small" v-if="heliosUser1 && v.Agentenable">
											<el-checkbox label="Enable" border disabled="disabled" readonly="readonly"></el-checkbox>
										</el-checkbox-group>
										<el-checkbox-group v-model="v.enbale" size="small" v-else-if="v.Agentenable && !heliosUser1">
											<el-checkbox label="Enable" border></el-checkbox>
										</el-checkbox-group>
										<span v-else>- -</span>
									</td>
								</tr>
							</tbody>
						</table>
					</div>

				</div>
			</div>
			<!-- sync1 end -->
			<!-- 只有AU 才显示 -->
		</div>
		<script type="text/javascript" src="assets/js/jquery.js"></script>
		<script type="text/javascript" src="assets/js/vue.js"></script>
		<script type="text/javascript" src="assets/js/index.js"></script>
		<script type="text/javascript" src="assets/js/comment.js"></script>

		<script type="text/javascript">
			var helios;
			let data = {
				equipment: sessionStorage.getItem("equipment"),

				Alarmdata: [],
				Opticaldata: [],

				Syncdata1: [],
				Syncdata2: [],
				Syncdata3: [],
				Syncdata4: [],
				Syncdataone_four: [],
				heliosUser: heliosUser[0] == $session,
				heliosUser1: heliosUser[3] == $session,


				isshow: {
					Optical: true,
					Alarm: true,
					Opticalbox: false,
					Alarmbox: false,
					showBox: false,
				}

			};

			// 循环匹配键值对
			function getArreaualL(arr1, arr2, arr) {
				var data = []
				var obj = {}; //获取addr
				obj.action = "set";
				var tmp = [];
				arr1.concat(arr2).sort().sort(function(a, b) { //两个数组链接
					if (a == b && tmp.indexOf(a) === -1) {
						tmp.push(a);
					}
				});
				//  obj.params 队列 赋值
				for (var i = 0; i < tmp.length; i++) {
					var setdata = new Object();
					setdata.adr = tmp[i];
					setdata.value = arr[tmp[i]];
					data.push(setdata);
				}
				obj.data = data;
				return obj;
			}

			function resnumber(agent, enbale) {
				if (agent == false && enbale == false) {
					return "0";
				} else if (agent == false && enbale == true) {
					return "1";
				} else if (agent == true && enbale == false) {
					return "2";
				} else if (agent == true && enbale == true) {
					return "3";
				}
			}

			let getajax = {
				GETAlarm(c) {
					util.SetHeliosDevMsg();

					var obj1 = [54, 55, 57, 56];
					var obj = {
						"data": obj1.join(),
						"action": "READ"
					}
					setTimeout(function() {
						util.getattrajax(obj, function(data) {
							var data = data.data;
							var data1 = [];
							if (data.length > 0) {
								if (c) {
									util.success('success');
								}
								for (var i = 0; i < data.length; i++) {
									if (54 == data[i].adr) {
										let obj = helios.ResTruefalse("Power Off Alarm Enable 1", data[i].adr, data[i].value);
										data1.push(obj);
									}
									if (55 == data[i].adr) {
										let obj = helios.ResTruefalse("Power Failure Alarm Enable 1", data[i].adr, data[i].value);
										data1.push(obj);
									}
									if (56 == data[i].adr) {
										let obj = helios.ResTruefalse("Over Temp Alarm Enable ", data[i].adr, data[i].value);
										data1.push(obj);
									}
									if (57 == data[i].adr) {
										let obj = helios.ResTruefalse("Door Open Alarm Enable", data[i].adr, data[i].value);
										data1.push(obj);
									}
								}
								var boxshow = util.HeliosDataLength(data1);
								helios.isshow.Alarm = boxshow;
								helios.Alarmdata = data1;
							} else {
								util.error('Error');
							}
						})
					}, 500);


				},
				setAlarm() {
					util.SetHeliosDevMsg();
					var gaojing = (JSON.parse(JSON.stringify(helios.Alarmdata))); //先转字符串在转对象
					//得到数据对象名  
					var keys = Object.keys(gaojing);
					var adrs = [54, 55, 56, 57]; // 与 新数据配对 
					var obj = getArreaualL(keys, adrs, helios.Alarm);
					var data = [];
					let start = {
						adr: 204,
						value: "1"
					}
					data.push(start);
					for (var i = 0; i < helios.Alarmdata.length; i++) {
						var obj = {
							adr: "",
							value: ""
						}
						if (54 == helios.Alarmdata[i].adr) {
							obj.adr = helios.Alarmdata[i].adr;
							obj.value = resnumber(helios.Alarmdata[i].agent, helios.Alarmdata[i].enbale);
							data.push(obj);
						}
						if (55 == helios.Alarmdata[i].adr) {
							obj.adr = helios.Alarmdata[i].adr;
							obj.value = resnumber(helios.Alarmdata[i].agent, helios.Alarmdata[i].enbale);
							data.push(obj);
						}
						if (56 == helios.Alarmdata[i].adr) {
							obj.adr = helios.Alarmdata[i].adr;
							obj.value = resnumber(helios.Alarmdata[i].agent, helios.Alarmdata[i].enbale);
							data.push(obj);
						}
						if (57 == helios.Alarmdata[i].adr) {
							obj.adr = helios.Alarmdata[i].adr;
							obj.value = resnumber(helios.Alarmdata[i].agent, helios.Alarmdata[i].enbale);
							data.push(obj);
						}
					}

					let end = {
						adr: 205,
						value: "1"
					}
					data.push(end);
					var obj = {
						"data": JSON.stringify(data),
						"action": "SET"
					}

					setTimeout(function() {
						util.postattrajax(obj, function(data) {
							if (1 != data) {
								util.error('Error' + data);
							} else {
								util.success('success');
							}
						});
					}, 100);

				}
			}
			helios = new Vue({
				el: "#content",
				data: data,
				mounted() {
					$("body").resize();
				},
				beforeMount() {

					//Technician 账号权限
					this.getOptical();
					getajax.GETAlarm();

					this.getSync(1);
					this.getSync(2);
					this.getSync(3);
					this.getSync(4);

					if (heliosUser[0] != $session) {
						setTimeout(function() {
							/* helios.isshow.Optical.forEach(function(v, i) {
								if (true == v) {
									helios.isshow.Opticalbox = true;
								} else {
									//helios.isshow.Opticalbox = false;
								}
							}); */

							helios.isshow.Alarm.forEach(function(vv, i) {
								if (true == vv) {
									helios.isshow.Alarmbox = true;
								} else {
									//	helios.isshow.Alarmbox = false;
								}
							});
							if (helios.isshow.Alarmbox == false && helios.isshow.Opticalbox == false) {
								helios.isshow.showBox = true;
							}

						}, 1000);

					} else {
						setTimeout(function() {
							helios.isshow.Opticalbox = true;
							helios.isshow.Alarmbox = true;
							helios.isshow.showBox = false;
						}, 1500);
					}



				},

				methods: {
					Alarm_read(c) {
						getajax.GETAlarm(c);
					},
					setAlarm() {
						getajax.setAlarm();
					},
					getOptical(c) {
						util.SetHeliosDevMsg();
						var obj1 = [66, 67, 68, 69, 79];
						var obj = {
							"data": obj1.join(),
							"action": "READ"
						};
						setTimeout(function() {
							util.getattrajax(obj, function(data) {
								var data = data.data;
								var data1 = [];
								if (data.length > 0) {
									if (c) {
										util.success('success');
									}
									for (var i = 0; i < data.length; i++) {
										if (66 == data[i].adr) {
											let obj = helios.ResTruefalse("Optical Transceiver Failure 1", data[i].adr, data[i].value);
											data1.push(obj);
										}
										if (67 == data[i].adr) {
											let obj = helios.ResTruefalse("Optical Transceiver Failure 2", data[i].adr, data[i].value);
											data1.push(obj);
										}
										if (68 == data[i].adr) {
											let obj = helios.ResTruefalse("Optical Transceiver Failure 3", data[i].adr, data[i].value);
											data1.push(obj);
										}
										if (69 == data[i].adr) {
											let obj = helios.ResTruefalse("Optical Transceiver Failure 4", data[i].adr, data[i].value);
											data1.push(obj);
										}
										if (78 == data[i].adr) {
											let obj = {
												name: "Max DL Delay",
												adr: data[i].adr,
												value: data[i].value
											}
											data1.push(obj);
										}
										if (79 == data[i].adr) {
											let obj = {};
											obj.name = "Auto Delay CAL Switch";
											obj.adr = data[i].adr;
											obj.value = data[i].value == "1" ? true : false;
											data1.push(obj);
										}
									}
									helios.Opticaldata = data1;
								} else {
									util.error("Error：Light");
								}
							})

						}, 100);
					},

					setLight() {
						util.SetHeliosDevMsg();
						var adrs = [66, 67, 68, 69, 79]; // 与 新数据配对  
						var data = [];
						let start = {
							adr: 204,
							value: "1"
						}
						data.push(start);
						for (var i = 0; i < helios.Opticaldata.length; i++) {
							var obj = {
								adr: "",
								value: ""
							}
							if (66 == helios.Opticaldata[i].adr) {
								obj.adr = helios.Opticaldata[i].adr;
								obj.value = resnumber(helios.Opticaldata[i].agent, helios.Opticaldata[i].enbale);
								data.push(obj);
							}
							if (67 == helios.Opticaldata[i].adr) {
								obj.adr = helios.Opticaldata[i].adr;
								obj.value = resnumber(helios.Opticaldata[i].agent, helios.Opticaldata[i].enbale);
								data.push(obj);
							}
							if (68 == helios.Opticaldata[i].adr) {
								obj.adr = helios.Opticaldata[i].adr;
								obj.value = resnumber(helios.Opticaldata[i].agent, helios.Opticaldata[i].enbale);
								data.push(obj);
							}
							if (69 == helios.Opticaldata[i].adr) {
								obj.adr = helios.Opticaldata[i].adr;
								obj.value = resnumber(helios.Opticaldata[i].agent, helios.Opticaldata[i].enbale);
								data.push(obj);
							}
							//自动时延调整开关
							if (79 == helios.Opticaldata[i].adr) {
								obj.adr = helios.Opticaldata[i].adr;

								obj.value = helios.Opticaldata[i].value == true ? "1" : "0";

								data.push(obj);
							}
						}
						let end = {
							adr: 205,
							value: "1"
						}
						data.push(end);
						var obj = {
							"data": JSON.stringify(data),
							"action": "SET"
						}

						setTimeout(function() {
							util.postattrajax(obj, function(data) {
								if (1 != data) {
									util.error('Error' + data);
								} else {
									util.success('success');
								}
							});

						}, 100);
					},

					getSync(c, v) {
						util.SetHeliosDevMsg();
						var adr = [];
						//Sync1  ----- Sync4
						if (c == 1) {
							adr = [17, 18, 19, 20, 37];
						} else if (c == 2) {
							adr = [22, 23, 24, 25, 38];
						} else if (c == 3) {
							adr = [27, 28, 29, 30, 39];
						} else if (c == 4) {
							adr = [32, 33, 34, 35, 40];
						}

						var obj = {
							"data": adr.join(),
							"action": "READ"
						}
						util.getattrajax(obj, function(data) {
							if (c == 1) {
								helios.GetSyncdata_one_four(data, adr, c, v);
							} else if (c == 2) {
								helios.GetSyncdata_one_four(data, adr, c, v);
							} else if (c == 3) {
								helios.GetSyncdata_one_four(data, adr, c, v);
							} else if (c == 4) {
								helios.GetSyncdata_one_four(data, adr, c, v);
							}

						});
					},
					setSync(c) {
						util.SetHeliosDevMsg();
						if (c == 1) {
							let adr = [17, 18, 19, 20, 37];
							helios.SetSyncdata_one_four(adr, helios.Syncdata1, c)
						} else if (c == 2) {
							let adr = [22, 23, 24, 25, 38];
							helios.SetSyncdata_one_four(adr, helios.Syncdata2, c)
						} else if (c == 3) {
							let adr = [27, 28, 29, 30, 39];
							helios.SetSyncdata_one_four(adr, helios.Syncdata3, c)
						} else if (c == 4) {
							let adr = [32, 33, 34, 35, 40];
							helios.SetSyncdata_one_four(adr, helios.Syncdata4, c)
						}
					},


					//get   function   Sync1  ----- Sync4 
					GetSyncdata_one_four(data, adr, c, tiptxt) {

						var data = data.data;
						var data1 = [];
						if (data.length > 0) {
							if (tiptxt) {

								util.success('success sync:' + c);

							}
							for (var i = 0; i < data.length; i++) {
								/* if (heliosUser[0] == $session || heliosUser[1] == $session || heliosUser[2] == $session) { */
								if (adr[0] == data[i].adr) {
									let obj = {}
									obj.name = "Sync TDD-LTE Auto Sync Enable";
									obj.adr = data[i].adr;
									obj.value = data[i].value == "1" ? true : false;
									data1.push(obj);
								}
								/* } */

								if (adr[1] == data[i].adr) {
									let obj = {}
									obj.name = "Sync TD-LTE UL and DL Ratio";
									obj.adr = data[i].adr;
									obj.value = Number(data[i].value);
									data1.push(obj);
								}


								if (adr[2] == data[i].adr) {
									let obj = {}
									obj.name = " Sync Special Time Slot Ratio";
									obj.adr = data[i].adr;
									obj.value = Number(data[i].value);
									/* if (heliosUser[0] == $session || heliosUser[1] == $session || heliosUser[2] == $session) { */
									data1.push(obj);
									/* } */
								}

								if (adr[3] == data[i].adr) {
									let obj = {}
									obj.name = "Sync CP";
									obj.adr = data[i].adr;
									obj.value = data[i].value
									data1.push(obj);
								}
								if (adr[4] == data[i].adr) {
									let obj = helios.ResTruefalse("Sync Async Alarm Enable", data[i].adr, data[i].value);
									/* if (heliosUser[0] == $session || heliosUser[1] == $session || heliosUser[2] == $session) { */
									data1.push(obj);
									/* } */
								}
							}

							if (c == 1) {
								helios.Syncdata1 = data1
								helios.Syncdataone_four.push(helios.Syncdata1);
							} else if (c == 2) {
								helios.Syncdata2 = data1
								helios.Syncdataone_four.push(helios.Syncdata2);
							} else if (c == 3) {
								helios.Syncdata3 = data1
								helios.Syncdataone_four.push(helios.Syncdata3);
							} else if (c == 4) {
								helios.Syncdata4 = data1
								helios.Syncdataone_four.push(helios.Syncdata3);
							}

						} else {
							util.error("Error:sync" + c);
						}
					},

					SetSyncdata_one_four(adr, tag, c) {

						var data = [];
						let start = {
							adr: 204,
							value: "1"
						}
						data.push(start);
						for (var i = 0; i < tag.length; i++) {
							var obj = {
								adr: "",
								value: ""
							}
							if (adr[0] == tag[i].adr) {
								obj.adr = tag[i].adr;
								obj.value = tag[i].value == true ? "1" : "0";
								data.push(obj);
							}
							if (adr[1] == tag[i].adr) {
								obj.adr = tag[i].adr;
								obj.value = tag[i].value + "";
								data.push(obj);
							}
							if (adr[2] == tag[i].adr) {
								obj.adr = tag[i].adr;
								obj.value = tag[i].value + "";
								data.push(obj);
							}
							if (adr[3] == tag[i].adr) {
								obj.adr = tag[i].adr;
								obj.value = tag[i].value;
								data.push(obj);
							}
							if (adr[4] == tag[i].adr) {
								obj.adr = tag[i].adr;
								obj.value = resnumber(tag[i].agent, tag[i].enbale);
								data.push(obj);
							}
						}

						let end = {
							adr: 205,
							value: "1"
						}
						data.push(end);
						var obj1 = {
							"data": JSON.stringify(data),
							"action": "SET"
						}
						setTimeout(function() {
							util.postattrajax(obj1, function(data) {
								if (1 != data) {
									util.error('Error' + data);

								} else {
									util.success('success sync:' + c);
								}
							});
						}, 100);

					},

					//没有数组 真假转换
					ResTruefalse(name, adr, value) {
						let obj = {
							name: "",
							adr: "",
							agent: "",
							enbale: "",
							value: Number(value),
							Agentenable: false,
						}
						obj.adr = adr;
						obj.name = name;
						if ("0" == value) {
							obj.agent = false;
							obj.enbale = false;
						}
						if ("1" == value) {
							obj.agent = false;
							obj.enbale = true;
						}
						if ("2" == value) {
							obj.agent = true;
							obj.enbale = false;
							obj.Agentenable = true;
						}
						if ("3" == value) {
							obj.agent = true;
							obj.enbale = true;
							obj.Agentenable = true;
						}
						return obj
					},
					//没有数组 真假转换为数字
					resnumber(agent, enbale) {
						if (agent == false && enbale == false) {
							return "0";
						} else if (agent == false && enbale == true) {
							return "1";
						} else if (agent == true && enbale == false) {
							return "2";
						} else if (agent == true && enbale == true) {
							return "3";
						}
					}
				},
			})
		</script>
	</body>
</html>
